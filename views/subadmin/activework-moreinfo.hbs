<div class="container-fluid">
    <div class="row">
        <div class="col-md-12" style="text-align: center;">
            <table class="table text-light">
  <thead>
    <tr>
         <th scope="col">Number</th> 
      <th scope="col">Worker Name</th> 
      <th scope="col">Worker Address</th>
       <th scope="col">Location</th>
      <th scope="col">Worker Phone Number</th>
      <th scope="col">Worker Mail Address</th>
      <th scope="col">Worker District</th> 
      <th scope="col">Skilled Or Not</th> 
      <th scope="col">Worker Aaddhar Number</th> 
    </tr>
  </thead>
  <tbody>
    {{#if wrk}}
     {{#each wrk}}
     <tr>          
       <td>{{@index}}</td>
       <td>{{this.wrkerinfo.name}}</td>
        <td>{{this.wrkerinfo.address}}</td>
        <td><a href="https://www.google.com/maps?q={{this.wrkerinfo.late}},{{this.wrkerinfo.long}}" class="btn btn-success">Location</a></td>
        <td>{{this.wrkerinfo.ph}}</td>
        <td>{{this.wrkerinfo.email}}</td>
         <td>{{this.wrkerinfo.district}}</td>
         <td>{{this.wrkerinfo.isskilled}}</td>
         <td>{{this.wrkerinfo.aadhar}}</td>
         
     </tr>
        
     {{/each}}
    {{else}}
        <h1>Nothing Found</h1>
    {{/if}}
  </tbody>
</table>
<div class="text-light">
  {{#if datebetween}}
  {{!-- ################################################################################################### --}}
      <div id="timer">00:00:00</div>
       <style>
    #timer {
      font-size: 64px;
      font-weight: bold;
      width: 90vw; /* Set the width to 30% of the viewport width */
      height: auto; /* Automatically adjust height based on content */
    }
  </style>
   {{!-- ################################################################################################### --}}
  {{/if}}

  {{#if datealreadyend}}
    <h1>This Contract already expired</h1>
  {{/if}}
  {{#if datenotreached}}
     <h1>Work progress only between {{rev.wkinfo.sdate}} and {{rev.wkinfo.edate}}</h1>
  {{/if}}
</div>
        </div>

    </div>
</div>

<script>
  // Example time strings in "HH:mm" format
  const startTimeString = "{{rev.wkinfo.stime}}";
  const endTimeString = "{{rev.wkinfo.entim}}";
  console.log("{{rev.wkinfo.stime}}")
  // Split the time strings into hours and minutes
  const [startHoursString, startMinutesString] = startTimeString.split(":");
  const [endHoursString, endMinutesString] = endTimeString.split(":");

  // Convert hours and minutes to integers
  const startHours = parseInt(startHoursString, 10);
  const startMinutes = parseInt(startMinutesString, 10);
  const endHours = parseInt(endHoursString, 10);
  const endMinutes = parseInt(endMinutesString, 10);

  // Create new Date objects for start and end times
  const startDate = new Date();
  startDate.setHours(startHours, startMinutes, 0, 0);

  const endDate = new Date();
  endDate.setHours(endHours, endMinutes, 0, 0);

  // Check if redirection has already occurred today
  let redirectionOccurred = localStorage.getItem('redirectionOccurred') === 'true';

  // Update the timer every second
  const timerInterval = setInterval(updateTimer, 1000);

  function updateTimer() {
    const currentTime = new Date();

    // Check if current time is within the date range
    if (currentTime >= startDate && currentTime <= endDate) {
      const elapsedTime = currentTime - startDate;
      const hours = Math.floor(elapsedTime / (1000 * 60 * 60));
      const minutes = Math.floor(
        (elapsedTime % (1000 * 60 * 60)) / (1000 * 60)
      );
      const seconds = Math.floor((elapsedTime % (1000 * 60)) / 1000);

      document.getElementById("timer").textContent = `${formatTime(
        hours
      )}:${formatTime(minutes)}:${formatTime(seconds)}`;
      
    } else {
      // Stop the timer if it's outside the specified date range
      clearInterval(timerInterval);
      document.getElementById("timer").textContent = "Todays Work Completed";

      // Redirect to another webpage if redirection has not already occurred today
      if (!redirectionOccurred) {
        localStorage.setItem('redirectionOccurred', 'true'); // Set the flag indicating redirection has occurred
        window.location.href = `http://localhost:3000/subadmin/reversewrker?id={{rev._id}}`;
      }

      // Clear the interval to prevent further calls to updateTimer
      clearInterval(timerInterval);
    }
  }

  function formatTime(time) {
    return time < 10 ? `0${time}` : time;
  }
</script>

